{"ast":null,"code":"import _defineProperty from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aminakano/Mytinerary/server/client/src/Components/LogInForm.js\";\nimport React, { Component } from 'react';\nimport '../Styles/SignUpForm.css';\nimport { connect } from 'react-redux';\nimport * as actionCreator from '../Store/Actions/actions';\nvar initialState = {\n  username: \"\",\n  password: \"\",\n  rememberMe: false,\n  usernameError: \"\",\n  passwordError: \"\"\n};\n\nvar LogInForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(LogInForm, _Component);\n\n  function LogInForm(props) {\n    var _this;\n\n    _classCallCheck(this, LogInForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LogInForm).call(this, props));\n\n    _this.onChange = function (event) {\n      var isCheckbox = event.target.type === \"checkbox\";\n\n      _this.setState(_defineProperty({}, event.target.name, isCheckbox ? event.target.checked : event.target.value));\n    };\n\n    _this.validate = function () {\n      var usernameError = \"\";\n      var passwordError = \"\";\n\n      if (!_this.state.username) {\n        usernameError = \"Username cannot be blank\";\n      }\n\n      if (!_this.state.password) {\n        passwordError = \"Password is mandatory\";\n      }\n\n      if (usernameError || passwordError) {\n        _this.setState({\n          usernameError: usernameError,\n          passwordError: passwordError\n        });\n\n        return false;\n      }\n\n      return true;\n    };\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n\n      var isValid = _this.validate();\n\n      if (isValid) {\n        console.log(_this.state); // clear form\n\n        _this.setState(initialState); //   this.props.signUpUsers(this.state)\n\n\n        console.log(_this.state);\n      }\n    };\n\n    _this.state = initialState; // this.onChange = this.onChange.bind(this);\n    // this.onSubmit = this.onSubmit.bind(this);\n\n    return _this;\n  }\n\n  _createClass(LogInForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        className: \"signUp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Log in\"), React.createElement(\"div\", {\n        className: \"formParts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Username:\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        value: this.state.username,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.state.usernameError), React.createElement(\"div\", {\n        className: \"formParts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Password:\"), React.createElement(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        value: this.state.password,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.state.passwordError), React.createElement(\"div\", {\n        className: \"formParts remember\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"checkbox\",\n        id: \"checkbox_id\",\n        name: \"rememberMe\",\n        onChange: this.onChange,\n        value: this.state.rememberMe,\n        defaultChecked: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }), \" Remember me\"), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"signUpBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"OK\"), React.createElement(\"button\", {\n        className: \"LogInGoogle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fab fa-google\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }), \"\\xA0Log in with Google\"), React.createElement(\"p\", {\n        className: \"leadsToAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Don't have a MYtinerary account yet? You should create one! It's totally free and only takes a minute.\"), React.createElement(\"div\", {\n        className: \"linkToAccount\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/Account\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Create Account\")));\n    }\n  }]);\n\n  return LogInForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userLoggedIn: state.userLoggedIn\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    LogInUsers: function LogInUsers(user) {\n      dispatch(actionCreator.LogInUsers(user));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogInForm);","map":{"version":3,"sources":["/Users/aminakano/Mytinerary/server/client/src/Components/LogInForm.js"],"names":["React","Component","connect","actionCreator","initialState","username","password","rememberMe","usernameError","passwordError","LogInForm","props","onChange","event","isCheckbox","target","type","setState","name","checked","value","validate","state","onSubmit","preventDefault","isValid","console","log","fontSize","color","mapStateToProps","userLoggedIn","mapDispatchToProps","dispatch","LogInUsers","user"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../Styles/SignUpForm.css';\nimport { connect } from 'react-redux';\nimport * as actionCreator from '../Store/Actions/actions';\n\nconst initialState = {\n    username: \"\",\n    password: \"\",\n    rememberMe: false,\n    usernameError: \"\",\n    passwordError: \"\",\n    \n  };\nclass LogInForm extends Component {\n    constructor(props){\n        super(props);\n        this.state = initialState;\n            \n        \n        // this.onChange = this.onChange.bind(this);\n        // this.onSubmit = this.onSubmit.bind(this);\n    }\n    onChange = event => {\n        const isCheckbox = event.target.type === \"checkbox\";\n        this.setState({\n          [event.target.name]: isCheckbox\n            ? event.target.checked\n            : event.target.value\n        });\n      };\n\n    validate= () =>{\n        let usernameError = \"\";\n        let passwordError = \"\";\n       \n    \n        if (!this.state.username) {\n          usernameError = \"Username cannot be blank\";\n        }\n        if (!this.state.password) {\n            passwordError = \"Password is mandatory\";\n          }\n           \n        if (usernameError || passwordError) {\n          this.setState({ usernameError , passwordError });\n          return false;\n        }\n   \n        return true;\n      };\n    \n    onSubmit= event => {\n        event.preventDefault();\n        const isValid = this.validate();\n        if (isValid) {\n          console.log(this.state);\n          // clear form\n          this.setState(initialState);\n        //   this.props.signUpUsers(this.state)\n          console.log(this.state)\n        }\n      };\n    render(){\n        return(\n            <form onSubmit={this.onSubmit} className=\"signUp\">\n                <h3>Log in</h3>\n                <div className=\"formParts\">\n                    <label>Username:</label>\n                    <input\n                    type=\"text\"\n                    name=\"username\"\n                    value ={this.state.username}\n                    onChange={this.onChange}/>\n                </div>\n                <div style={{ fontSize: 12, color: \"red\" }}>\n                            {this.state.usernameError}\n                </div>\n                <div className=\"formParts\">              \n                    <label>Password:</label>\n                    <input\n                    type=\"text\"\n                    name=\"password\"\n                    value ={this.state.password}\n                    onChange ={this.onChange}/>\n                </div>\n                <div style={{ fontSize: 12, color: \"red\" }}>\n                            {this.state.passwordError}\n                </div>\n                <div className=\"formParts remember\">\n                    <input type=\"checkbox\" \n                    id =\"checkbox_id\"\n                    name = \"rememberMe\"     \n                    onChange ={this.onChange}\n                    value ={this.state.rememberMe}\n                    defaultChecked={false}\n                    /> Remember me\n                </div>  \n                <button type=\"submit\" className=\"signUpBtn\">OK</button>\n                <button className=\"LogInGoogle\"><i className=\"fab fa-google\"></i>&nbsp;Log in with Google</button> \n                {/* <button>Log in with Facebook</button>  */}\n                <p className=\"leadsToAccount\">Don't have a MYtinerary account yet? You should create one! It's totally free and only takes a minute.</p>\n                <div className=\"linkToAccount\"><a href=\"/Account\">Create Account</a></div>\n            </form>\n        );\n    }\n}\nconst mapStateToProps =(state)=>{\n    return {\n        userLoggedIn: state.userLoggedIn,\n        \n    }\n}\nconst mapDispatchToProps =(dispatch)=>{\n    return {\n        LogInUsers: (user) => {\n            dispatch(actionCreator.LogInUsers(user))\n        }\n    }\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(LogInForm);"]},"metadata":{},"sourceType":"module"}