{"ast":null,"code":"import _classCallCheck from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aminakano/Mytinerary/server/client/src/Filter.js\";\nimport React, { Component } from 'react';\nimport CityData from './json.json';\nimport CityDisplay from './CityDisplay';\nimport Form from './Form';\n\nvar Filter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Filter, _Component);\n\n  function Filter() {\n    var _this;\n\n    _classCallCheck(this, Filter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filter).call(this));\n\n    _this.filterList = function (e) {\n      var updateList = _this.state.filtered.filter(function (item) {\n        return item.name.toLowerCase().search(e.target.value.toLowerCase()) !== -1;\n      });\n\n      _this.setState({\n        filtered: updateList\n      });\n    };\n\n    _this.state = {\n      filtered: [// {  \n      //    \"name\":\"Buenos Aires\",\n      //    \"country\":\"Argentina\",\n      //    \"image\":\"https://i.ibb.co/KjrSCJG/buenos-aires.jpg\"\n      // },\n      // {  \n      //    \"name\":\"Amsterdam\",\n      //    \"country\":\"Netherlands\",\n      //    \"image\":\"https://i.ibb.co/FKHmh6j/amsterdam.jpg\"\n      // },\n      // {  \n      //    \"name\":\"New York\",\n      //    \"country\":\"United States\",\n      //    \"image\":\"https://i.ibb.co/0ZgcGL0/new-york.jpg\"\n      // },\n      // {  \n      //    \"name\":\"Los Angeles\",\n      //    \"country\":\"United States\",\n      //    \"image\":\"https://i.ibb.co/j30RGJx/los-angeles.jpg\"\n      // },\n      // {  \n      //    \"name\":\"Athens\",\n      //    \"country\":\"Greace\",\n      //    \"image\":\"https://i.ibb.co/X8PZnc9/athens.jpg\"\n      // },\n      // {  \n      //    \"name\":\"Barcelona\",\n      //    \"country\":\"Spain\",\n      //    \"image\":\"https://i.ibb.co/QCMNzsK/barcelona.jpg\"\n      // },\n      // {  \n      //    \"name\":\"Berlin\",\n      //    \"country\":\"Germany\",\n      //    \"image\":\"https://i.ibb.co/9hGRxT4/berlin.jpg\"\n      // },\n      // {  \n      //    \"name\":\"London\",\n      //    \"country\":\"United Kingdom\",\n      //    \"image\":\"https://i.ibb.co/Kw2VPwV/london.jpg\"\n      // },\n      // {  \n      //    \"name\":\"Paris\",\n      //    \"country\":\"France\",\n      //    \"image\":\"https://i.ibb.co/J52FX4z/paris.jpg\"\n      // },\n      // {  \n      //    \"name\":\"Rome\",\n      //    \"country\":\"Italy\",\n      //    \"image\":\"https://i.ibb.co/s5KLmds/rome.jpg\"\n      // }\n      \"Amsterdam\", \"Barcelona\", \"Berlin\", \"Buenos Aires\", \"London\", \"Athens\", \"Rome\", \"Paris\"] // filtered:\n\n    };\n    console.log(CityData);\n    return _this;\n  }\n\n  _createClass(Filter, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {// this.setState({filtered: this.state.all})\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"Search your destination!\",\n        onChange: this.filterList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.state.filtered.map(function (item, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, item);\n      })));\n    }\n  }]);\n\n  return Filter;\n}(Component); // class Filter extends Component{\n//     constructor(props){\n//         super(props);\n//         this.state={\n//             data: props.data\n//         };\n//         let data = [\n//             { id: 1, name: 'foo' },\n//             { id: 2, name: 'bar' },\n//             { id: 3, name: 'baz' },\n//             { id: 4, name: 'qux' },\n//             { id: 5, name: 'quux' },\n//             { id: 6, name: 'foobar' }\n//           ];\n//     }\n//     handleFilterVal(val){\n//         const line= this.props.data.filter((item)=>(\n//             item.id.toString().indexOf(val) >= 0\n//             ||\n//             item.name.toLowerCase().indexOf(val) >= 0\n//         ));\n//         this.setState({\n//             data:line\n//         });\n//     }\n//     render(){\n//         let list = this.state.data.map((data)=>(\n//             <li key={data.id}>\n//                 {data.id}:{data.name}\n//             </li>\n//         ));\n//     return(\n//         <div>\n//             <Form onFilterVal={this.handleFilterVal.bind(this)}/>\n//             <ul>\n//                 {list}\n//             </ul>\n//         </div>\n//     )\n//     }\n// }\n// Filter.propTypes ={\n//     data: React.PropTypes.array.isRequired\n// };\n\n\nexport default Filter;","map":{"version":3,"sources":["/Users/aminakano/Mytinerary/server/client/src/Filter.js"],"names":["React","Component","CityData","CityDisplay","Form","Filter","filterList","e","updateList","state","filtered","filter","item","name","toLowerCase","search","target","value","setState","console","log","map","index"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IACMC,M;;;;;AACF,oBAAa;AAAA;;AAAA;;AACT;;AADS,UA0EbC,UA1Ea,GA0EF,UAACC,CAAD,EAAK;AACZ,UAAMC,UAAU,GAAG,MAAKC,KAAL,CAAWC,QAAX,CAAoBC,MAApB,CAA2B,UAACC,IAAD,EAAQ;AAClD,eAAOA,IAAI,CAACC,IAAL,CAAUC,WAAV,GAAwBC,MAAxB,CAA+BR,CAAC,CAACS,MAAF,CAASC,KAAT,CAAeH,WAAf,EAA/B,MAAiE,CAAC,CAAzE;AACH,OAFkB,CAAnB;;AAGA,YAAKI,QAAL,CAAc;AAACR,QAAAA,QAAQ,EAAEF;AAAX,OAAd;AACH,KA/EY;;AAET,UAAKC,KAAL,GAAW;AACPC,MAAAA,QAAQ,EAAC,CACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBApDK,EAqDL,WArDK,EAsDL,QAtDK,EAuDL,cAvDK,EAwDL,QAxDK,EAyDL,QAzDK,EA0DL,MA1DK,EA2DL,OA3DK,CADF,CAiEP;;AAjEO,KAAX;AAmEAS,IAAAA,OAAO,CAACC,GAAR,CAAYlB,QAAZ;AArES;AAsEZ;;;;wCACkB,CACf;AACH;;;6BAOO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,0BAA/B;AAA0D,QAAA,QAAQ,EAAE,KAAKI,UAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKG,KAAL,CAAWC,QAAX,CAAoBW,GAApB,CAAwB,UAACT,IAAD,EAAOU,KAAP,EAAe;AACpC,eACI;AAAI,UAAA,GAAG,EAAEA,KAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAiBV,IAAjB,CADJ;AAGH,OAJA,CADL,CALJ,CADJ;AAgBH;;;;EAlGgBX,S,GAsGrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;;;AACA,eAAeI,MAAf","sourcesContent":["import React, { Component } from 'react';\nimport CityData from './json.json';\nimport CityDisplay from './CityDisplay';\nimport Form from './Form';\nclass Filter extends Component{\n    constructor(){\n        super()\n        this.state={\n            filtered:[  \n                // {  \n                //    \"name\":\"Buenos Aires\",\n                //    \"country\":\"Argentina\",\n                //    \"image\":\"https://i.ibb.co/KjrSCJG/buenos-aires.jpg\"\n                // },\n                // {  \n                //    \"name\":\"Amsterdam\",\n                //    \"country\":\"Netherlands\",\n                //    \"image\":\"https://i.ibb.co/FKHmh6j/amsterdam.jpg\"\n             \n                // },\n                // {  \n                //    \"name\":\"New York\",\n                //    \"country\":\"United States\",\n                //    \"image\":\"https://i.ibb.co/0ZgcGL0/new-york.jpg\"\n                // },\n                // {  \n                //    \"name\":\"Los Angeles\",\n                //    \"country\":\"United States\",\n                //    \"image\":\"https://i.ibb.co/j30RGJx/los-angeles.jpg\"\n                // },\n                // {  \n                //    \"name\":\"Athens\",\n                //    \"country\":\"Greace\",\n                //    \"image\":\"https://i.ibb.co/X8PZnc9/athens.jpg\"\n                // },\n                // {  \n                //    \"name\":\"Barcelona\",\n                //    \"country\":\"Spain\",\n                //    \"image\":\"https://i.ibb.co/QCMNzsK/barcelona.jpg\"\n                // },\n                // {  \n                //    \"name\":\"Berlin\",\n                //    \"country\":\"Germany\",\n                //    \"image\":\"https://i.ibb.co/9hGRxT4/berlin.jpg\"\n                // },\n                // {  \n                //    \"name\":\"London\",\n                //    \"country\":\"United Kingdom\",\n                //    \"image\":\"https://i.ibb.co/Kw2VPwV/london.jpg\"\n                // },\n                // {  \n                //    \"name\":\"Paris\",\n                //    \"country\":\"France\",\n                //    \"image\":\"https://i.ibb.co/J52FX4z/paris.jpg\"\n                // },\n                // {  \n                //    \"name\":\"Rome\",\n                //    \"country\":\"Italy\",\n                //    \"image\":\"https://i.ibb.co/s5KLmds/rome.jpg\"\n                // }\n                \"Amsterdam\",\n                \"Barcelona\",\n                \"Berlin\",\n                \"Buenos Aires\",\n                \"London\",\n                \"Athens\",\n                \"Rome\",\n                \"Paris\"\n                \n             ]\n             \n           ,\n            // filtered:\n        }\n        console.log(CityData)\n    }\n    componentDidMount(){\n        // this.setState({filtered: this.state.all})\n    }\n    filterList=(e)=>{\n        const updateList = this.state.filtered.filter((item)=>{\n            return item.name.toLowerCase().search(e.target.value.toLowerCase()) !== -1;\n        })\n        this.setState({filtered: updateList})\n    }\n    render(){\n        return(\n            <div>\n                <form>\n                     <input type=\"text\" placeholder=\"Search your destination!\" onChange={this.filterList}/>\n                     \n                </form>\n                <div>\n                    {this.state.filtered.map((item, index)=>{\n                        return(\n                            <li key={index}>{item}</li>\n                        )\n                    })}\n                </div>\n\n            </div>\n        );\n    }\n}\n\n\n// class Filter extends Component{\n//     constructor(props){\n//         super(props);\n//         this.state={\n//             data: props.data\n//         };\n//         let data = [\n//             { id: 1, name: 'foo' },\n//             { id: 2, name: 'bar' },\n//             { id: 3, name: 'baz' },\n//             { id: 4, name: 'qux' },\n//             { id: 5, name: 'quux' },\n//             { id: 6, name: 'foobar' }\n//           ];\n//     }\n//     handleFilterVal(val){\n//         const line= this.props.data.filter((item)=>(\n//             item.id.toString().indexOf(val) >= 0\n//             ||\n//             item.name.toLowerCase().indexOf(val) >= 0\n//         ));\n//         this.setState({\n//             data:line\n//         });\n//     }\n//     render(){\n//         let list = this.state.data.map((data)=>(\n//             <li key={data.id}>\n//                 {data.id}:{data.name}\n//             </li>\n//         ));\n//     return(\n//         <div>\n//             <Form onFilterVal={this.handleFilterVal.bind(this)}/>\n//             <ul>\n//                 {list}\n//             </ul>\n//         </div>\n//     )\n\n//     }\n// }\n\n// Filter.propTypes ={\n//     data: React.PropTypes.array.isRequired\n// };\nexport default Filter;"]},"metadata":{},"sourceType":"module"}