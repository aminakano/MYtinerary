{"ast":null,"code":"import _defineProperty from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aminakano/Mytinerary/server/client/src/Components/ValidationForm.js\";\n// import React, { Component } from 'react';\n// import '../Styles/SignUpForm.css'\n// const initialState = {\n//     username: \"\",\n//     password: \"\",\n//     email: \"\",\n//     firstName: \"\",\n//     lastName: \"\",\n//     country:\"\",\n//     hasAgreed: \"\",\n//     usernameError: \"\",\n//     passwordError: \"\",\n//     emailError: \"\",\n//     firstNameError: \"\",\n//     lastNameError: \"\",\n//     countryError:\"\",\n//     hasAgreedError: \"\",\n//   };\n// const countries=[\"England\",\n// \"Germany\",\n// \"France\",\n// \"Holland\",\n// \"Ireland\",\n// \"Spain\",\n// \"United States\"];\n// class ValidationForm extends Component {\n//     state = initialState;\n//     // this.onChange = this.onChange.bind(this);\n//     //     this.onSubmit = this.onSubmit.bind(this);\n//     onChange(e){\n//         const target = e.target;\n//         const value = target.type === 'checkbox' ? target.checked : target.value;\n//         const name = target.name;\n//         this.setState({\n//         [name]: value\n//         });\n//     }\n//     validate= () =>{\n//         let usernameError = \"\";\n//         let emailError = \"\";\n//         // let passwordError = \"\";\n//         if (!this.state.username) {\n//           usernameError = \"username cannot be blank\";\n//         }\n//         if (!this.state.email.includes(\"@\")) {\n//           emailError = \"invalid email\";\n//         }\n//         if (emailError || usernameError) {\n//           this.setState({ emailError, usernameError });\n//           return false;\n//         }\n//         return true;\n//       };\n//     onSubmit(e){\n//         e.preventDefault();\n//         console.log(this.state);\n//         const isValid = this.validate();\n//         if (isValid) {\n//         console.log(this.state);\n//         // clear form\n//         this.setState(initialState);\n//         }\n//     }\n//     render(){\n//         console.log(this.state)\n//         const options = countries.map((option, key)=>{\n//             return(\n//             <option value={option} key={option}>{option}</option>\n//             )\n//         })\n//         return(\n//             <div>\n//                 <form onSubmit={this.onSubmit}>\n//                     <div>\n//                         <label htmlFor=\"username\">Username</label>\n//                         <input type=\"text\" \n//                         onChange={this.onChange}\n//                         value={this.state.username}\n//                         name=\"username\"/>\n//                         <div style={{ fontSize: 12, color: \"red\" }}>\n//                             {this.state.usernameError}\n//                          </div>\n//                     </div>\n//                     <div><label htmlFor=\"password\">Password</label>\n//                     <input type=\"text\" \n//                     onChange={this.onChange}\n//                     value={this.state.password}\n//                     name=\"password\"/></div>\n//                     <div>\n//                         <select \n//                         name= \"country\"\n//                         value={this.state.country}\n//                         onChange={this.onChange}>\n//                             <option value=\"\">Choose your country</option>\n//                             {options}\n//                         </select>\n//                     </div>\n//                     <div>\n//                         <input type=\"checkbox\" \n//                         name=\"hasAgreed\"\n//                         value={this.state.hasAgreed}\n//                         onChange={this.onChange}/>I agree to MYtinerary's Terms and Conditions\n//                     </div>\n//                     <button type=\"submit\" className=\"signUpBtn\">OK</button>\n//                 </form>\n//             </div>\n//         );\n//     }\n// }\n// export default ValidationForm;\nimport React from \"react\";\nvar initialState = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  nameError: \"\",\n  emailError: \"\",\n  passwordError: \"\"\n};\n\nvar ValiationForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ValiationForm, _React$Component);\n\n  function ValiationForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ValiationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ValiationForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = initialState;\n\n    _this.handleChange = function (event) {\n      var isCheckbox = event.target.type === \"checkbox\";\n\n      _this.setState(_defineProperty({}, event.target.name, isCheckbox ? event.target.checked : event.target.value));\n    };\n\n    _this.validate = function () {\n      var nameError = \"\";\n      var emailError = \"\"; // let passwordError = \"\";\n\n      if (!_this.state.name) {\n        nameError = \"name cannot be blank\";\n      }\n\n      if (!_this.state.email.includes(\"@\")) {\n        emailError = \"invalid email\";\n      }\n\n      if (emailError || nameError) {\n        _this.setState({\n          emailError: emailError,\n          nameError: nameError\n        });\n\n        return false;\n      }\n\n      return true;\n    };\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n\n      var isValid = _this.validate();\n\n      if (isValid) {\n        console.log(_this.state); // clear form\n\n        _this.setState(initialState);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ValiationForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"name\",\n        placeholder: \"name\",\n        value: this.state.name,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, this.state.nameError)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"email\",\n        placeholder: \"email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, this.state.emailError)), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, this.state.passwordError)), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, \"submit\"));\n    }\n  }]);\n\n  return ValiationForm;\n}(React.Component);\n\nexport { ValiationForm as default };","map":{"version":3,"sources":["/Users/aminakano/Mytinerary/server/client/src/Components/ValidationForm.js"],"names":["React","initialState","name","email","password","nameError","emailError","passwordError","ValiationForm","state","handleChange","event","isCheckbox","target","type","setState","checked","value","validate","includes","handleSubmit","preventDefault","isValid","console","log","fontSize","color","Component"],"mappings":"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","sourcesContent":["// import React, { Component } from 'react';\n// import '../Styles/SignUpForm.css'\n\n// const initialState = {\n//     username: \"\",\n//     password: \"\",\n//     email: \"\",\n//     firstName: \"\",\n//     lastName: \"\",\n//     country:\"\",\n//     hasAgreed: \"\",\n//     usernameError: \"\",\n//     passwordError: \"\",\n//     emailError: \"\",\n//     firstNameError: \"\",\n//     lastNameError: \"\",\n//     countryError:\"\",\n//     hasAgreedError: \"\",\n\n//   };\n// const countries=[\"England\",\n// \"Germany\",\n// \"France\",\n// \"Holland\",\n// \"Ireland\",\n// \"Spain\",\n// \"United States\"];\n\n// class ValidationForm extends Component {\n\n//     state = initialState;\n\n//     // this.onChange = this.onChange.bind(this);\n//     //     this.onSubmit = this.onSubmit.bind(this);\n\n//     onChange(e){\n//         const target = e.target;\n//         const value = target.type === 'checkbox' ? target.checked : target.value;\n//         const name = target.name;\n//         this.setState({\n//         [name]: value\n//         });\n//     }\n\n    \n    \n\n\n//     validate= () =>{\n//         let usernameError = \"\";\n//         let emailError = \"\";\n//         // let passwordError = \"\";\n    \n//         if (!this.state.username) {\n//           usernameError = \"username cannot be blank\";\n//         }\n    \n//         if (!this.state.email.includes(\"@\")) {\n//           emailError = \"invalid email\";\n//         }\n    \n//         if (emailError || usernameError) {\n//           this.setState({ emailError, usernameError });\n//           return false;\n//         }\n    \n//         return true;\n//       };\n    \n//     onSubmit(e){\n//         e.preventDefault();\n//         console.log(this.state);\n//         const isValid = this.validate();\n\n//         if (isValid) {\n//         console.log(this.state);\n//         // clear form\n//         this.setState(initialState);\n//         }\n//     }\n//     render(){\n//         console.log(this.state)\n//         const options = countries.map((option, key)=>{\n//             return(\n//             <option value={option} key={option}>{option}</option>\n//             )\n//         })\n        \n//         return(\n//             <div>\n//                 <form onSubmit={this.onSubmit}>\n//                     <div>\n//                         <label htmlFor=\"username\">Username</label>\n//                         <input type=\"text\" \n//                         onChange={this.onChange}\n//                         value={this.state.username}\n//                         name=\"username\"/>\n//                         <div style={{ fontSize: 12, color: \"red\" }}>\n//                             {this.state.usernameError}\n//                          </div>\n//                     </div>\n//                     <div><label htmlFor=\"password\">Password</label>\n//                     <input type=\"text\" \n//                     onChange={this.onChange}\n//                     value={this.state.password}\n//                     name=\"password\"/></div>\n//                     <div>\n//                         <select \n//                         name= \"country\"\n//                         value={this.state.country}\n//                         onChange={this.onChange}>\n//                             <option value=\"\">Choose your country</option>\n//                             {options}\n//                         </select>\n//                     </div>\n//                     <div>\n//                         <input type=\"checkbox\" \n//                         name=\"hasAgreed\"\n//                         value={this.state.hasAgreed}\n//                         onChange={this.onChange}/>I agree to MYtinerary's Terms and Conditions\n//                     </div>\n//                     <button type=\"submit\" className=\"signUpBtn\">OK</button>\n                    \n//                 </form>\n//             </div>\n//         );\n//     }\n// }\n\n// export default ValidationForm;\n\n\nimport React from \"react\";\n\nconst initialState = {\n  name: \"\",\n  email: \"\",\n  password: \"\",\n  nameError: \"\",\n  emailError: \"\",\n  passwordError: \"\"\n};\n\nexport default class ValiationForm extends React.Component {\n  state = initialState;\n\n  handleChange = event => {\n    const isCheckbox = event.target.type === \"checkbox\";\n    this.setState({\n      [event.target.name]: isCheckbox\n        ? event.target.checked\n        : event.target.value\n    });\n  };\n\n  validate = () => {\n    let nameError = \"\";\n    let emailError = \"\";\n    // let passwordError = \"\";\n\n    if (!this.state.name) {\n      nameError = \"name cannot be blank\";\n    }\n\n    if (!this.state.email.includes(\"@\")) {\n      emailError = \"invalid email\";\n    }\n\n    if (emailError || nameError) {\n      this.setState({ emailError, nameError });\n      return false;\n    }\n\n    return true;\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const isValid = this.validate();\n    if (isValid) {\n      console.log(this.state);\n      // clear form\n      this.setState(initialState);\n    }\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div>\n          <input\n            name=\"name\"\n            placeholder=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n          />\n          <div style={{ fontSize: 12, color: \"red\" }}>\n            {this.state.nameError}\n          </div>\n        </div>\n        <div>\n          <input\n            name=\"email\"\n            placeholder=\"email\"\n            value={this.state.email}\n            onChange={this.handleChange}\n          />\n          <div style={{ fontSize: 12, color: \"red\" }}>\n            {this.state.emailError}\n          </div>\n        </div>\n        <div>\n          <input\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            value={this.state.password}\n            onChange={this.handleChange}\n          />\n          <div style={{ fontSize: 12, color: \"red\" }}>\n            {this.state.passwordError}\n          </div>\n        </div>\n        <button type=\"submit\">submit</button>\n      </form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}