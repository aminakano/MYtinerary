{"ast":null,"code":"export var getCities = function getCities(cities) {\n  return {\n    type: \"GET_CITIES\",\n    cities: cities //cities: cities\n\n  };\n};\nexport var intinerariesIsLoaded = function intinerariesIsLoaded(_intinerariesIsLoaded) {\n  return {\n    type: \"ITINERARIES_IS_LOADED\",\n    intinerariesIsLoaded: _intinerariesIsLoaded\n  };\n};\nexport var getCitiesIsLoaded = function getCitiesIsLoaded(citiesIsLoaded) {\n  return {\n    type: \"CITIES_LOADED\",\n    citiesIsLoaded: citiesIsLoaded\n  };\n};\nexport function fetchCities() {\n  return function (dispatch) {\n    fetch(\"/api/cities\", {\n      method: \"GET\",\n      mode: \"no-cors\",\n      headers: {\n        'accept': 'application/json',\n        'content-type': 'application/x-www-form-urlencoded'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      dispatch(getCities(json.data));\n      dispatch(getCitiesIsLoaded(true));\n    }).catch(function (err) {\n      return console.error(err);\n    });\n  };\n}\nexport var getItineraries = function getItineraries(itineraries) {\n  return {\n    type: \"GET_ITINERARIES\",\n    itineraries: itineraries\n  };\n};\nexport function fetchItineraries(city) {\n  return function (dispatch) {\n    fetch(\"/api/itineraries/\" + city, {\n      method: \"GET\",\n      mode: \"no-cors\",\n      headers: {\n        'accept': \"application/json\",\n        'content-type': \"application/x-www-form-urlencoded\"\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      console.log(res);\n      dispatch(getItineraries(res));\n      dispatch(intinerariesIsLoaded(true));\n    }) // .then(json => {\n    //     console.log(json);\n    //     dispatch(getItineraries(json.data))\n    // })\n    .catch(function (err) {\n      return console.error(err);\n    });\n  };\n}\nexport function userSuccess(userAdded) {\n  return {\n    type: \"CREATE_USER\",\n    userAdded: userAdded\n  };\n}\nexport function signUpUsers(userInfo) {\n  return function (dispatch) {\n    fetch('/api/users', {\n      method: 'POST',\n      headers: {\n        'content-type': \"application/x-www-form-urlencoded\"\n      },\n      body: \"username=\" + userInfo.username + \"&password=\" + userInfo.password + \"&email=\" + userInfo.email + \"&firstName=\" + userInfo.firstName + \"&lastName=\" + userInfo.lastName + \"&country=\" + userInfo.country\n    }).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      console.log('json', json);\n    }).catch(function (err) {\n      return console.error(err);\n    });\n  };\n}\nexport function UserLogged(userLoggedIn) {\n  return {\n    type: \"USER_LOGGEDIN\",\n    userLoggedIn: userLoggedIn\n  };\n}\nexport function LogInUsers(userInfo) {\n  return function (dispatch) {\n    fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'content-type': \"application/x-www-form-urlencoded\"\n      },\n      body: \"username=\" + userInfo.username + \"&password=\" + userInfo.password\n    }).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      dispatch(UserLogged(true));\n      console.log('json', json);\n      localStorage.setItem('token', json.token);\n    });\n  };\n}\nexport function UserLoggedOut() {\n  console.log(\"logout\");\n\n  if (window.confirm('Log out?')) {\n    localStorage.removeItem('token');\n    return function (dispatch) {\n      dispatch(UserLogged(false));\n    };\n  }\n}\nexport function UserToken() {\n  return function (dispatch) {\n    fetch(\"/api/verify\", {\n      method: \"GET\",\n      mode: \"no-cors\",\n      headers: {\n        accept: \"application/json\",\n        \"content-type\": \"application/x-www-form-urlencoded\"\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      dispatch(UserTokenIsValid(res));\n    }).catch(function (err) {\n      return console.error(err);\n    });\n  };\n}\nexport function UserTokenIsValid(user) {\n  return {\n    type: \"TOKEN_EXISTS\",\n    user: user\n  };\n}","map":{"version":3,"sources":["/Users/aminakano/Mytinerary/server/client/src/Store/Actions/actions.js"],"names":["getCities","cities","type","intinerariesIsLoaded","getCitiesIsLoaded","citiesIsLoaded","fetchCities","dispatch","fetch","method","mode","headers","then","response","json","data","catch","err","console","error","getItineraries","itineraries","fetchItineraries","city","res","log","userSuccess","userAdded","signUpUsers","userInfo","body","username","password","email","firstName","lastName","country","UserLogged","userLoggedIn","LogInUsers","localStorage","setItem","token","UserLoggedOut","window","confirm","removeItem","UserToken","accept","UserTokenIsValid","user"],"mappings":"AAAA,OAAO,IAAMA,SAAS,GAAC,SAAVA,SAAU,CAACC,MAAD,EAAU;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAE,YADH;AAEHD,IAAAA,MAAM,EAANA,MAFG,CAEK;;AAFL,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,oBAAoB,GAAG,8BAACA,qBAAD,EAA0B;AAC1D,SAAO;AACHD,IAAAA,IAAI,EAAE,uBADH;AAEHC,IAAAA,oBAAoB,EAApBA;AAFG,GAAP;AAIH,CALM;AAOP,OAAO,IAAMC,iBAAiB,GAAC,SAAlBA,iBAAkB,CAACC,cAAD,EAAkB;AAC7C,SAAO;AACHH,IAAAA,IAAI,EAAE,eADH;AAEHG,IAAAA,cAAc,EAAdA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,SAASC,WAAT,GAAsB;AAEzB,SAAO,UAAAC,QAAQ,EAAG;AACdC,IAAAA,KAAK,CAAC,aAAD,EAAe;AAChBC,MAAAA,MAAM,EAAE,KADQ;AAEhBC,MAAAA,IAAI,EAAE,SAFU;AAGhBC,MAAAA,OAAO,EAAC;AACJ,kBAAU,kBADN;AAEJ,wBAAgB;AAFZ;AAHQ,KAAf,CAAL,CAQCC,IARD,CAQM,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KARd,EASCF,IATD,CASM,UAAAE,IAAI,EAAI;AACVP,MAAAA,QAAQ,CAACP,SAAS,CAACc,IAAI,CAACC,IAAN,CAAV,CAAR;AACAR,MAAAA,QAAQ,CAACH,iBAAiB,CAAC,IAAD,CAAlB,CAAR;AACH,KAZD,EAaCY,KAbD,CAaO,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KAbV;AAcH,GAfD;AAkBH;AAED,OAAO,IAAMG,cAAc,GAAC,SAAfA,cAAe,CAACC,WAAD,EAAe;AACvC,SAAO;AACHnB,IAAAA,IAAI,EAAE,iBADH;AAEHmB,IAAAA,WAAW,EAAXA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,SAASC,gBAAT,CAA0BC,IAA1B,EAA+B;AAClC,SAAO,UAAAhB,QAAQ,EAAG;AAEdC,IAAAA,KAAK,CAAC,sBAAsBe,IAAvB,EAA4B;AAC7Bd,MAAAA,MAAM,EAAC,KADsB;AAE7BC,MAAAA,IAAI,EAAE,SAFuB;AAG7BC,MAAAA,OAAO,EAAC;AACJ,kBAAU,kBADN;AAEJ,wBAAgB;AAFZ;AAHqB,KAA5B,CAAL,CASCC,IATD,CASM,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KATd,EAUCF,IAVD,CAUM,UAAAY,GAAG,EAAG;AACRN,MAAAA,OAAO,CAACO,GAAR,CAAYD,GAAZ;AACAjB,MAAAA,QAAQ,CAACa,cAAc,CAACI,GAAD,CAAf,CAAR;AACAjB,MAAAA,QAAQ,CAACJ,oBAAoB,CAAC,IAAD,CAArB,CAAR;AACH,KAdD,EAeA;AACA;AACA;AAEA;AAnBA,KAoBCa,KApBD,CAoBO,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KApBV;AAqBH,GAvBD;AAwBH;AACD,OAAO,SAASS,WAAT,CAAqBC,SAArB,EAA+B;AAClC,SAAO;AACHzB,IAAAA,IAAI,EAAE,aADH;AAEHyB,IAAAA,SAAS,EAATA;AAFG,GAAP;AAIH;AACD,OAAO,SAASC,WAAT,CAAqBC,QAArB,EAA8B;AAEjC,SAAO,UAAAtB,QAAQ,EAAG;AACdC,IAAAA,KAAK,CAAC,YAAD,EAAe;AAChBC,MAAAA,MAAM,EAAE,MADQ;AAEhBE,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFO;AAKhBmB,MAAAA,IAAI,EAAE,cAAcD,QAAQ,CAACE,QAAvB,GAAkC,YAAlC,GAAiDF,QAAQ,CAACG,QAA1D,GAAqE,SAArE,GAAiFH,QAAQ,CAACI,KAA1F,GAAkG,aAAlG,GAAkHJ,QAAQ,CAACK,SAA3H,GAAuI,YAAvI,GAAsJL,QAAQ,CAACM,QAA/J,GAA0K,WAA1K,GAAwLN,QAAQ,CAACO;AALvL,KAAf,CAAL,CAMKxB,IANL,CAMU,UAAAY,GAAG;AAAA,aAAIA,GAAG,CAACV,IAAJ,EAAJ;AAAA,KANb,EAOKF,IAPL,CAOU,UAAAE,IAAI,EAAI;AACZI,MAAAA,OAAO,CAACO,GAAR,CAAY,MAAZ,EAAoBX,IAApB;AACD,KATL,EAUKE,KAVL,CAUW,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KAVd;AAWH,GAZD;AAaH;AAED,OAAO,SAASoB,UAAT,CAAoBC,YAApB,EAAiC;AAEpC,SAAO;AACHpC,IAAAA,IAAI,EAAC,eADF;AAEHoC,IAAAA,YAAY,EAAZA;AAFG,GAAP;AAIH;AAGD,OAAO,SAASC,UAAT,CAAoBV,QAApB,EAA6B;AAChC,SAAO,UAAAtB,QAAQ,EAAG;AACdC,IAAAA,KAAK,CAAC,YAAD,EAAe;AAChBC,MAAAA,MAAM,EAAE,MADQ;AAEhBE,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFO;AAKhBmB,MAAAA,IAAI,EAAE,cAAcD,QAAQ,CAACE,QAAvB,GAAkC,YAAlC,GAAiDF,QAAQ,CAACG;AALhD,KAAf,CAAL,CAMGpB,IANH,CAMQ,UAAAY,GAAG;AAAA,aAAIA,GAAG,CAACV,IAAJ,EAAJ;AAAA,KANX,EAOGF,IAPH,CAOQ,UAAAE,IAAI,EAAG;AACTP,MAAAA,QAAQ,CAAC8B,UAAU,CAAC,IAAD,CAAX,CAAR;AACAnB,MAAAA,OAAO,CAACO,GAAR,CAAY,MAAZ,EAAmBX,IAAnB;AACA0B,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B3B,IAAI,CAAC4B,KAAnC;AACH,KAXH;AAYH,GAbD;AAcH;AAGD,OAAO,SAASC,aAAT,GAAwB;AAC3BzB,EAAAA,OAAO,CAACO,GAAR,CAAY,QAAZ;;AACA,MAAImB,MAAM,CAACC,OAAP,CAAe,UAAf,CAAJ,EAAgC;AAChCL,IAAAA,YAAY,CAACM,UAAb,CAAwB,OAAxB;AACA,WAAO,UAAAvC,QAAQ,EAAI;AACfA,MAAAA,QAAQ,CAAC8B,UAAU,CAAC,KAAD,CAAX,CAAR;AACC,KAFL;AAGC;AACJ;AAED,OAAO,SAASU,SAAT,GAAoB;AACvB,SAAO,UAAAxC,QAAQ,EAAI;AACfC,IAAAA,KAAK,CAAC,aAAD,EAAgB;AACnBC,MAAAA,MAAM,EAAE,KADW;AAEnBC,MAAAA,IAAI,EAAE,SAFa;AAGnBC,MAAAA,OAAO,EAAE;AACPqC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT;AAHU,KAAhB,CAAL,CAQGpC,IARH,CAQQ,UAAAY,GAAG;AAAA,aAAIA,GAAG,CAACV,IAAJ,EAAJ;AAAA,KARX,EASGF,IATH,CAUM,UAAAY,GAAG,EAAG;AACFjB,MAAAA,QAAQ,CAAC0C,gBAAgB,CAACzB,GAAD,CAAjB,CAAR;AACH,KAZP,EAcGR,KAdH,CAcS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KAdZ;AAeH,GAhBD;AAiBH;AAED,OAAO,SAASgC,gBAAT,CAA0BC,IAA1B,EAA+B;AAC9B,SAAO;AACLhD,IAAAA,IAAI,EAAE,cADD;AAELgD,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAIP","sourcesContent":["export const getCities=(cities)=>{\n    return {\n        type: \"GET_CITIES\",\n        cities  //cities: cities\n    }\n}\n\nexport const intinerariesIsLoaded = (intinerariesIsLoaded) => {\n    return {\n        type: \"ITINERARIES_IS_LOADED\",\n        intinerariesIsLoaded\n    }\n}\n\nexport const getCitiesIsLoaded=(citiesIsLoaded)=>{\n    return {\n        type: \"CITIES_LOADED\",\n        citiesIsLoaded  \n    }\n}\nexport function fetchCities(){\n    \n    return dispatch =>{\n        fetch(\"/api/cities\",{\n            method: \"GET\",\n            mode: \"no-cors\",\n            headers:{\n                'accept': 'application/json',\n                'content-type': 'application/x-www-form-urlencoded'\n            }\n        })\n        .then(response => response.json())\n        .then(json => {\n            dispatch(getCities(json.data))\n            dispatch(getCitiesIsLoaded(true))\n        }) \n        .catch(err => console.error(err))\n    }\n\n\n}\n\nexport const getItineraries=(itineraries)=>{\n    return {\n        type: \"GET_ITINERARIES\",\n        itineraries\n    }\n}\nexport function fetchItineraries(city){\n    return dispatch =>{\n        \n        fetch(\"/api/itineraries/\" + city,{\n            method:\"GET\",\n            mode: \"no-cors\",\n            headers:{\n                'accept': \"application/json\",\n                'content-type': \"application/x-www-form-urlencoded\"\n            }\n        })\n       \n        .then(response => response.json())\n        .then(res =>{\n            console.log(res);\n            dispatch(getItineraries(res))\n            dispatch(intinerariesIsLoaded(true));\n        })\n        // .then(json => {\n        //     console.log(json);\n        //     dispatch(getItineraries(json.data))\n            \n        // })\n        .catch(err => console.error(err))\n    }\n}\nexport function userSuccess(userAdded){\n    return {\n        type: \"CREATE_USER\",\n        userAdded\n    }\n}\nexport function signUpUsers(userInfo){\n    \n    return dispatch =>{\n        fetch('/api/users', {\n            method: 'POST',\n            headers: {\n                'content-type': \"application/x-www-form-urlencoded\"\n            },\n            body: \"username=\" + userInfo.username + \"&password=\" + userInfo.password + \"&email=\" + userInfo.email + \"&firstName=\" + userInfo.firstName + \"&lastName=\" + userInfo.lastName + \"&country=\" + userInfo.country            \n          }).then(res => res.json())\n            .then(json => {\n              console.log('json', json);            \n            })\n            .catch(err => console.error(err));\n    }\n}\n\nexport function UserLogged(userLoggedIn){\n   \n    return {\n        type:\"USER_LOGGEDIN\",\n        userLoggedIn\n    }\n}\n\n\nexport function LogInUsers(userInfo){\n    return dispatch =>{\n        fetch('/api/login', {\n            method: 'POST',\n            headers: {\n                'content-type': \"application/x-www-form-urlencoded\"\n            },\n            body: \"username=\" + userInfo.username + \"&password=\" + userInfo.password \n        }).then(res => res.json())\n          .then(json =>{\n              dispatch(UserLogged(true))\n              console.log('json',json);\n              localStorage.setItem('token', json.token)\n          });\n    }\n}\n\n\nexport function UserLoggedOut(){\n    console.log(\"logout\")    \n    if (window.confirm('Log out?')) {\n    localStorage.removeItem('token')\n    return dispatch => {\n        dispatch(UserLogged(false))\n        }\n    }\n}\n\nexport function UserToken(){\n    return dispatch => {\n        fetch(\"/api/verify\", {\n          method: \"GET\",\n          mode: \"no-cors\",\n          headers: {\n            accept: \"application/json\",\n            \"content-type\": \"application/x-www-form-urlencoded\"\n          }\n        })\n          .then(res => res.json())\n          .then(\n              res =>{\n                  dispatch(UserTokenIsValid(res));\n              }\n          )\n          .catch(err => console.error(err));\n    }\n}\n\nexport function UserTokenIsValid(user){\n        return {\n          type: \"TOKEN_EXISTS\",\n          user\n        };\n}"]},"metadata":{},"sourceType":"module"}