{"ast":null,"code":"import _defineProperty from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aminakano/Mytinerary/server/client/src/Components/ValidationForm.js\";\nimport React, { Component } from 'react';\nimport '../Styles/SignUpForm.css';\nimport { connect } from 'react-redux';\nimport * as actionCreator from '../Store/Actions/actions';\nvar initialState = {\n  username: \"\",\n  password: \"\",\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  country: \"\",\n  hasAgreed: false,\n  usernameError: \"\",\n  passwordError: \"\",\n  emailError: \"\",\n  firstNameError: \"\",\n  lastNameError: \"\",\n  countryError: \"\",\n  hasAgreedError: \"\"\n};\nvar countries = [\"England\", \"Germany\", \"France\", \"Holland\", \"Ireland\", \"Spain\", \"United States\"];\n\nvar ValidationForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ValidationForm, _Component);\n\n  function ValidationForm() {\n    var _this;\n\n    _classCallCheck(this, ValidationForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ValidationForm).call(this));\n\n    _this.onChange = function (event) {\n      var isCheckbox = event.target.type === \"checkbox\";\n\n      _this.setState(_defineProperty({}, event.target.name, isCheckbox ? event.target.checked : event.target.value));\n    };\n\n    _this.validate = function () {\n      var usernameError = \"\";\n      var emailError = \"\";\n      var passwordError = \"\";\n      var countryError = \"\";\n      var hasAgreedError = \"\";\n\n      if (!_this.state.username) {\n        usernameError = \"Username cannot be blank\";\n      }\n\n      if (!_this.state.email.includes(\"@\")) {\n        emailError = \"Invalid email\";\n      }\n\n      if (!_this.state.password) {\n        passwordError = \"Password is mandatory\";\n      }\n\n      if (!_this.state.country) {\n        countryError = \"Select your country\";\n      }\n\n      if (!_this.state.hasAgreed) {\n        hasAgreedError = \"You need to agree\";\n      }\n\n      if (emailError || usernameError || passwordError || countryError || hasAgreedError) {\n        _this.setState({\n          emailError: emailError,\n          usernameError: usernameError,\n          passwordError: passwordError,\n          countryError: countryError,\n          hasAgreedError: hasAgreedError\n        });\n\n        return false;\n      }\n\n      return true;\n    };\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n\n      var isValid = _this.validate();\n\n      if (isValid) {\n        console.log(_this.state); // clear form\n\n        _this.setState(initialState); //   this.props.signUpUsers(this.state.initialState)\n\n      }\n    };\n\n    _this.state = initialState;\n    return _this;\n  }\n\n  _createClass(ValidationForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(this.state)\n      var options = countries.map(function (option, key) {\n        return React.createElement(\"option\", {\n          value: option,\n          key: option,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, option);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        className: \"signUp\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Create Account\"), React.createElement(\"div\", {\n        className: \"addPhoto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Add Photo\"), React.createElement(\"input\", {\n        type: \"file\",\n        name: \"avatar\",\n        accept: \".png, .jpg, .jpeg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"formParts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Username:\"), React.createElement(\"input\", {\n        type: \"text\",\n        onChange: this.onChange,\n        value: this.state.username,\n        name: \"username\",\n        placeholder: \"Username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, this.state.usernameError), React.createElement(\"div\", {\n        className: \"formParts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Password:\"), React.createElement(\"input\", {\n        type: \"password\",\n        onChange: this.onChange,\n        value: this.state.password,\n        name: \"password\",\n        placeholder: \"Password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, this.state.passwordError), React.createElement(\"div\", {\n        className: \"formParts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Email:\"), React.createElement(\"input\", {\n        id: \"email\",\n        type: \"text\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: this.state.email,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, this.state.emailError), React.createElement(\"div\", {\n        className: \"formParts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"First Name:\"), React.createElement(\"input\", {\n        id: \"firstName\",\n        type: \"text\",\n        name: \"firstName\",\n        placeholder: \"First Name\",\n        value: this.state.firstName,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"formParts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Last Name:\"), React.createElement(\"input\", {\n        id: \"lastName\",\n        type: \"text\",\n        name: \"lastName\",\n        placeholder: \"Last Name\",\n        value: this.state.lastName,\n        onChange: this.onChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"formParts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, \"Country:\"), React.createElement(\"select\", {\n        id: \"value\",\n        name: \"country\",\n        value: this.state.country,\n        onChange: this.onChange,\n        multiple: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, \"Choose your country\"), options)), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, this.state.countryError), React.createElement(\"div\", {\n        className: \"formParts\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        id: \"checkbox_id\",\n        type: \"checkbox\",\n        name: \"hasAgreed\",\n        onChange: this.onChange,\n        value: this.state.hasAgreed,\n        defaultChecked: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"checkbox_id\",\n        className: \"TandC\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"I agree to MYtinerary's \\xA0\", React.createElement(\"a\", {\n        href: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, \"Terms and Conditions\"))), React.createElement(\"div\", {\n        style: {\n          fontSize: 12,\n          color: \"red\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, this.state.hasAgreedError), React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"signUpBtn\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"OK\")));\n    }\n  }]);\n\n  return ValidationForm;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userAdded: state.userAdded\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    signUpUsers: function signUpUsers(user) {\n      dispatch(actionCreator.signUpUsers(user));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ValidationForm); // import React from \"react\";\n// const initialState = {\n//   name: \"\",\n//   email: \"\",\n//   password: \"\",\n//   nameError: \"\",\n//   emailError: \"\",\n//   passwordError: \"\"\n// };\n// export default class ValiationForm extends React.Component {\n//   state = initialState;\n//   handleChange = event => {\n//     const isCheckbox = event.target.type === \"checkbox\";\n//     this.setState({\n//       [event.target.name]: isCheckbox\n//         ? event.target.checked\n//         : event.target.value\n//     });\n//   };\n//   validate = () => {\n//     let nameError = \"\";\n//     let emailError = \"\";\n//     // let passwordError = \"\";\n//     if (!this.state.name) {\n//       nameError = \"name cannot be blank\";\n//     }\n//     if (!this.state.email.includes(\"@\")) {\n//       emailError = \"invalid email\";\n//     }\n//     if (emailError || nameError) {\n//       this.setState({ emailError, nameError });\n//       return false;\n//     }\n//     return true;\n//   };\n//   handleSubmit = event => {\n//     event.preventDefault();\n//     const isValid = this.validate();\n//     if (isValid) {\n//       console.log(this.state);\n//       // clear form\n//       this.setState(initialState);\n//     }\n//   };\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit}>\n//         <div>\n//           <input\n//             name=\"name\"\n//             placeholder=\"name\"\n//             value={this.state.name}\n//             onChange={this.handleChange}\n//           />\n//           <div style={{ fontSize: 12, color: \"red\" }}>\n//             {this.state.nameError}\n//           </div>\n//         </div>\n//         <div>\n//           <input\n//             name=\"email\"\n//             placeholder=\"email\"\n//             value={this.state.email}\n//             onChange={this.handleChange}\n//           />\n//           <div style={{ fontSize: 12, color: \"red\" }}>\n//             {this.state.emailError}\n//           </div>\n//         </div>\n//         <div>\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             placeholder=\"password\"\n//             value={this.state.password}\n//             onChange={this.handleChange}\n//           />\n//           <div style={{ fontSize: 12, color: \"red\" }}>\n//             {this.state.passwordError}\n//           </div>\n//         </div>\n//         <button type=\"submit\">submit</button>\n//       </form>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/Users/aminakano/Mytinerary/server/client/src/Components/ValidationForm.js"],"names":["React","Component","connect","actionCreator","initialState","username","password","email","firstName","lastName","country","hasAgreed","usernameError","passwordError","emailError","firstNameError","lastNameError","countryError","hasAgreedError","countries","ValidationForm","onChange","event","isCheckbox","target","type","setState","name","checked","value","validate","state","includes","onSubmit","preventDefault","isValid","console","log","options","map","option","key","fontSize","color","mapStateToProps","userAdded","mapDispatchToProps","dispatch","signUpUsers","user"],"mappings":"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SAAS,EAAC,WAAlC;AAA8C,QAAA,OAAO,EAAE,KAAKe,QAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA1FJ,CADJ,CADJ;AAiGH;;;;EArKwBhC,S;;AAwK7B,IAAM2C,eAAe,GAAE,SAAjBA,eAAiB,CAACb,KAAD,EAAS;AAC5B,SAAO;AACHc,IAAAA,SAAS,EAAEd,KAAK,CAACc;AADd,GAAP;AAIH,CALD;;AAMA,IAAMC,kBAAkB,GAAE,SAApBA,kBAAoB,CAACC,QAAD,EAAY;AAClC,SAAO;AACHC,IAAAA,WAAW,EAAE,qBAACC,IAAD,EAAU;AACnBF,MAAAA,QAAQ,CAAC5C,aAAa,CAAC6C,WAAd,CAA0BC,IAA1B,CAAD,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAOA,eAAe/C,OAAO,CAAC0C,eAAD,EAAiBE,kBAAjB,CAAP,CAA4C1B,cAA5C,CAAf,C,CAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, { Component } from 'react';\nimport '../Styles/SignUpForm.css'\nimport { connect } from 'react-redux';\nimport * as actionCreator from '../Store/Actions/actions';\n\nconst initialState = {\n    username: \"\",\n    password: \"\",\n    email: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    country:\"\",\n    hasAgreed: false,\n    usernameError: \"\",\n    passwordError: \"\",\n    emailError: \"\",\n    firstNameError: \"\",\n    lastNameError: \"\",\n    countryError:\"\",\n    hasAgreedError: \"\",\n\n  };\nconst countries=\n        [\"England\",\n        \"Germany\",\n        \"France\",\n        \"Holland\",\n        \"Ireland\",\n        \"Spain\",\n        \"United States\"];\n\nclass ValidationForm extends Component {\n    constructor(){\n        super();\n        this.state = initialState;\n       \n    }\n    \n\n    onChange = event => {\n            const isCheckbox = event.target.type === \"checkbox\";\n            this.setState({\n              [event.target.name]: isCheckbox\n                ? event.target.checked\n                : event.target.value\n            });\n          };\n \n    validate= () =>{\n        let usernameError = \"\";\n        let emailError = \"\";\n        let passwordError = \"\";\n        let countryError =\"\";\n        let hasAgreedError =\"\";\n    \n        if (!this.state.username) {\n          usernameError = \"Username cannot be blank\";\n        }\n    \n        if (!this.state.email.includes(\"@\")) {\n          emailError = \"Invalid email\";\n        }\n        if (!this.state.password) {\n            passwordError = \"Password is mandatory\";\n          }\n        if(!this.state.country) {\n            countryError = \"Select your country\";\n        }\n        if(!this.state.hasAgreed){\n            hasAgreedError = \"You need to agree\";\n        }\n        if (emailError || usernameError || passwordError || countryError || hasAgreedError) {\n          this.setState({ emailError, usernameError , passwordError ,countryError, hasAgreedError});\n          return false;\n        }\n   \n        return true;\n      };\n    \n    onSubmit= event => {\n            event.preventDefault();\n            const isValid = this.validate();\n            if (isValid) {\n              console.log(this.state);\n              // clear form\n              this.setState(initialState);\n            //   this.props.signUpUsers(this.state.initialState)\n            }\n          };\n    componentDidMount() {}\n\n    render(){\n        // console.log(this.state)\n        const options = countries.map((option, key)=>{\n            return(\n            <option value={option} key={option}>{option}</option>\n            )\n        })\n        \n        return(\n            <div>\n                <form onSubmit={this.onSubmit} className=\"signUp\">\n                    <h3>Create Account</h3>\n                    <div className=\"addPhoto\">\n                        <label>Add Photo</label>\n                        <input type=\"file\"\n                        name=\"avatar\"\n                        accept=\".png, .jpg, .jpeg\"/>                   \n                    </div>\n                    <div className=\"formParts\">\n                        <label htmlFor=\"username\">Username:</label>\n                        <input type=\"text\" \n                        onChange={this.onChange}\n                        value={this.state.username}\n                        name=\"username\"\n                        placeholder=\"Username\"/>\n                        \n                    </div>\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                            {this.state.usernameError}\n                     </div>\n                    <div className=\"formParts\">\n                        <label htmlFor=\"password\">Password:</label>\n                        <input type=\"password\" \n                        onChange={this.onChange}\n                        value={this.state.password}\n                        name=\"password\"\n                        placeholder=\"Password\"/>\n                    </div>\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                            {this.state.passwordError}\n                    </div>\n                    <div className=\"formParts\">\n                        <label>Email:</label>\n                        <input\n                        id='email'\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder=\"Email\"\n                        value ={this.state.email}\n                        onChange = {this.onChange}/>\n                    </div>\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                            {this.state.emailError}\n                    </div>\n                    <div className=\"formParts\">\n                        <label>First Name:</label>\n                        <input\n                        id=\"firstName\"\n                        type=\"text\"\n                        name=\"firstName\"\n                        placeholder=\"First Name\"\n                        value ={this.state.firstName}\n                        onChange = {this.onChange}/>\n                    </div>\n                    <div className=\"formParts\">\n                        <label>Last Name:</label>\n                        <input\n                        id=\"lastName\"\n                        type=\"text\"\n                        name=\"lastName\"\n                        placeholder=\"Last Name\"\n                        value ={this.state.lastName}\n                        onChange ={this.onChange}/>\n                    </div>\n                    <div className=\"formParts\">\n                        <label>Country:</label>\n                        <select\n                        id=\"value\"\n                        name=\"country\"\n                        value ={this.state.country}\n                        onChange ={this.onChange} multiple={false} >\n                            <option value=\"\" disabled>Choose your country</option>\n                            {options}                    \n                        </select>\n                    </div>\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                            {this.state.countryError}\n                    </div>\n                    <div className=\"formParts\">                   \n                        <input id =\"checkbox_id\" type=\"checkbox\" name=\"hasAgreed\"\n                        onChange ={this.onChange}\n                        value={this.state.hasAgreed}\n                        defaultChecked={false} \n                        />\n                        <label htmlFor=\"checkbox_id\" className=\"TandC\">I agree to MYtinerary's &nbsp;<a href=\"\">Terms and Conditions</a>\n                        </label>\n                    </div>\n                    <div style={{ fontSize: 12, color: \"red\" }}>\n                            {this.state.hasAgreedError}\n                    </div>\n                    <button type=\"submit\"   className=\"signUpBtn\" onClick={this.onSubmit}>OK</button>\n                    \n                </form>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps =(state)=>{\n    return {\n        userAdded: state.userAdded,\n        \n    }\n}\nconst mapDispatchToProps =(dispatch)=>{\n    return {\n        signUpUsers: (user) => {\n            dispatch(actionCreator.signUpUsers(user))\n        }\n    }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(ValidationForm);\n\n\n// import React from \"react\";\n\n// const initialState = {\n//   name: \"\",\n//   email: \"\",\n//   password: \"\",\n//   nameError: \"\",\n//   emailError: \"\",\n//   passwordError: \"\"\n// };\n\n// export default class ValiationForm extends React.Component {\n//   state = initialState;\n\n//   handleChange = event => {\n//     const isCheckbox = event.target.type === \"checkbox\";\n//     this.setState({\n//       [event.target.name]: isCheckbox\n//         ? event.target.checked\n//         : event.target.value\n//     });\n//   };\n\n//   validate = () => {\n//     let nameError = \"\";\n//     let emailError = \"\";\n//     // let passwordError = \"\";\n\n//     if (!this.state.name) {\n//       nameError = \"name cannot be blank\";\n//     }\n\n//     if (!this.state.email.includes(\"@\")) {\n//       emailError = \"invalid email\";\n//     }\n\n//     if (emailError || nameError) {\n//       this.setState({ emailError, nameError });\n//       return false;\n//     }\n\n//     return true;\n//   };\n\n//   handleSubmit = event => {\n//     event.preventDefault();\n//     const isValid = this.validate();\n//     if (isValid) {\n//       console.log(this.state);\n//       // clear form\n//       this.setState(initialState);\n//     }\n//   };\n\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit}>\n//         <div>\n//           <input\n//             name=\"name\"\n//             placeholder=\"name\"\n//             value={this.state.name}\n//             onChange={this.handleChange}\n//           />\n//           <div style={{ fontSize: 12, color: \"red\" }}>\n//             {this.state.nameError}\n//           </div>\n//         </div>\n//         <div>\n//           <input\n//             name=\"email\"\n//             placeholder=\"email\"\n//             value={this.state.email}\n//             onChange={this.handleChange}\n//           />\n//           <div style={{ fontSize: 12, color: \"red\" }}>\n//             {this.state.emailError}\n//           </div>\n//         </div>\n//         <div>\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             placeholder=\"password\"\n//             value={this.state.password}\n//             onChange={this.handleChange}\n//           />\n//           <div style={{ fontSize: 12, color: \"red\" }}>\n//             {this.state.passwordError}\n//           </div>\n//         </div>\n//         <button type=\"submit\">submit</button>\n//       </form>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}