{"ast":null,"code":"import _defineProperty from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aminakano/Mytinerary/server/client/src/Components/ValidationForm.js\";\nimport React, { Component } from 'react';\nimport '../Styles/SignUpForm.css';\nvar initialState = {\n  username: \"\",\n  password: \"\",\n  email: \"\",\n  firstName: \"\",\n  lastName: \"\",\n  country: \"\",\n  hasAgreed: \"\",\n  usernameError: \"\",\n  passwordError: \"\",\n  emailError: \"\",\n  firstNameError: \"\",\n  lastNameError: \"\",\n  countryError: \"\",\n  hasAgreedError: \"\"\n};\nvar countries = [\"England\", \"Germany\", \"France\", \"Holland\", \"Ireland\", \"Spain\", \"United States\"];\n\nvar ValidationForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ValidationForm, _Component);\n\n  function ValidationForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ValidationForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ValidationForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = initialState;\n\n    _this.validate = function () {\n      var usernameError = \"\";\n      var emailError = \"\"; // let passwordError = \"\";\n\n      if (!_this.state.username) {\n        usernameError = \"username cannot be blank\";\n      }\n\n      if (!_this.state.email.includes(\"@\")) {\n        emailError = \"invalid email\";\n      }\n\n      if (emailError || usernameError) {\n        _this.setState({\n          emailError: emailError,\n          usernameError: usernameError\n        });\n\n        return false;\n      }\n\n      return true;\n    };\n\n    _this.onSubmit = function (event) {\n      event.preventDefault();\n\n      var isValid = _this.validate();\n\n      if (isValid) {\n        console.log(_this.state); // clear form\n\n        _this.setState(initialState);\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(ValidationForm, [{\n    key: \"onChange\",\n    // this.onChange = this.onChange.bind(this);\n    //     this.onSubmit = this.onSubmit.bind(this);\n    value: function onChange(e) {\n      var target = e.target;\n      var value = target.type === 'checkbox' ? target.checked : target.value;\n      var name = target.name;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state);\n      var options = countries.map(function (option, key) {\n        return React.createElement(\"option\", {\n          value: option,\n          key: option,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, option);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"signUpBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"OK\")));\n    }\n  }]);\n\n  return ValidationForm;\n}(Component);\n\nexport default ValidationForm; // import React from \"react\";\n// const initialState = {\n//   name: \"\",\n//   email: \"\",\n//   password: \"\",\n//   nameError: \"\",\n//   emailError: \"\",\n//   passwordError: \"\"\n// };\n// export default class ValiationForm extends React.Component {\n//   state = initialState;\n//   handleChange = event => {\n//     const isCheckbox = event.target.type === \"checkbox\";\n//     this.setState({\n//       [event.target.name]: isCheckbox\n//         ? event.target.checked\n//         : event.target.value\n//     });\n//   };\n//   validate = () => {\n//     let nameError = \"\";\n//     let emailError = \"\";\n//     // let passwordError = \"\";\n//     if (!this.state.name) {\n//       nameError = \"name cannot be blank\";\n//     }\n//     if (!this.state.email.includes(\"@\")) {\n//       emailError = \"invalid email\";\n//     }\n//     if (emailError || nameError) {\n//       this.setState({ emailError, nameError });\n//       return false;\n//     }\n//     return true;\n//   };\n//   handleSubmit = event => {\n//     event.preventDefault();\n//     const isValid = this.validate();\n//     if (isValid) {\n//       console.log(this.state);\n//       // clear form\n//       this.setState(initialState);\n//     }\n//   };\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit}>\n//         <div>\n//           <input\n//             name=\"name\"\n//             placeholder=\"name\"\n//             value={this.state.name}\n//             onChange={this.handleChange}\n//           />\n//           <div style={{ fontSize: 12, color: \"red\" }}>\n//             {this.state.nameError}\n//           </div>\n//         </div>\n//         <div>\n//           <input\n//             name=\"email\"\n//             placeholder=\"email\"\n//             value={this.state.email}\n//             onChange={this.handleChange}\n//           />\n//           <div style={{ fontSize: 12, color: \"red\" }}>\n//             {this.state.emailError}\n//           </div>\n//         </div>\n//         <div>\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             placeholder=\"password\"\n//             value={this.state.password}\n//             onChange={this.handleChange}\n//           />\n//           <div style={{ fontSize: 12, color: \"red\" }}>\n//             {this.state.passwordError}\n//           </div>\n//         </div>\n//         <button type=\"submit\">submit</button>\n//       </form>\n//     );\n//   }\n// }","map":{"version":3,"sources":["/Users/aminakano/Mytinerary/server/client/src/Components/ValidationForm.js"],"names":["React","Component","initialState","username","password","email","firstName","lastName","country","hasAgreed","usernameError","passwordError","emailError","firstNameError","lastNameError","countryError","hasAgreedError","countries","ValidationForm","state","validate","includes","setState","onSubmit","event","preventDefault","isValid","console","log","e","target","value","type","checked","name","options","map","option","key"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport '../Styles/SignUpForm.css'\n\nconst initialState = {\n    username: \"\",\n    password: \"\",\n    email: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    country:\"\",\n    hasAgreed: \"\",\n    usernameError: \"\",\n    passwordError: \"\",\n    emailError: \"\",\n    firstNameError: \"\",\n    lastNameError: \"\",\n    countryError:\"\",\n    hasAgreedError: \"\",\n\n  };\nconst countries=[\"England\",\n\"Germany\",\n\"France\",\n\"Holland\",\n\"Ireland\",\n\"Spain\",\n\"United States\"];\n\nclass ValidationForm extends Component {\n\n    state = initialState;\n\n    // this.onChange = this.onChange.bind(this);\n    //     this.onSubmit = this.onSubmit.bind(this);\n\n    onChange(e){\n        const target = e.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n        this.setState({\n        [name]: value\n        });\n    }\n\n    \n    \n\n\n    validate= () =>{\n        let usernameError = \"\";\n        let emailError = \"\";\n        // let passwordError = \"\";\n    \n        if (!this.state.username) {\n          usernameError = \"username cannot be blank\";\n        }\n    \n        if (!this.state.email.includes(\"@\")) {\n          emailError = \"invalid email\";\n        }\n    \n        if (emailError || usernameError) {\n          this.setState({ emailError, usernameError });\n          return false;\n        }\n    \n        return true;\n      };\n    \n    // onSubmit(e){\n    //     e.preventDefault();\n    //     console.log(this.state);\n    //     const isValid = this.validate();\n\n    //     if (isValid) {\n    //     console.log(this.state);\n    //     // clear form\n    //     this.setState(initialState);\n    //     }\n    // }\n    onSubmit= event => {\n            event.preventDefault();\n            const isValid = this.validate();\n            if (isValid) {\n              console.log(this.state);\n              // clear form\n              this.setState(initialState);\n            }\n          };\n\n\n    render(){\n        console.log(this.state)\n        const options = countries.map((option, key)=>{\n            return(\n            <option value={option} key={option}>{option}</option>\n            )\n        })\n        \n        return(\n            <div>\n                <form onSubmit={this.onSubmit}>\n                    {/* <div>\n                        <label htmlFor=\"username\">Username</label>\n                        <input type=\"text\" \n                        onChange={this.onChange}\n                        value={this.state.username}\n                        name=\"username\"/>\n                        <div style={{ fontSize: 12, color: \"red\" }}>\n                            {this.state.usernameError}\n                         </div>\n                    </div>\n                    <div><label htmlFor=\"password\">Password</label>\n                    <input type=\"text\" \n                    onChange={this.onChange}\n                    value={this.state.password}\n                    name=\"password\"/></div>\n                    <div>\n                        <select \n                        name= \"country\"\n                        value={this.state.country}\n                        onChange={this.onChange}>\n                            <option value=\"\">Choose your country</option>\n                            {options}\n                        </select>\n                    </div>\n                    <div>\n                        <input type=\"checkbox\" \n                        name=\"hasAgreed\"\n                        value={this.state.hasAgreed}\n                        onChange={this.onChange}/>I agree to MYtinerary's Terms and Conditions\n                    </div> */}\n                    <button type=\"submit\" className=\"signUpBtn\">OK</button>\n                    \n                </form>\n            </div>\n        );\n    }\n}\n\nexport default ValidationForm;\n\n\n// import React from \"react\";\n\n// const initialState = {\n//   name: \"\",\n//   email: \"\",\n//   password: \"\",\n//   nameError: \"\",\n//   emailError: \"\",\n//   passwordError: \"\"\n// };\n\n// export default class ValiationForm extends React.Component {\n//   state = initialState;\n\n//   handleChange = event => {\n//     const isCheckbox = event.target.type === \"checkbox\";\n//     this.setState({\n//       [event.target.name]: isCheckbox\n//         ? event.target.checked\n//         : event.target.value\n//     });\n//   };\n\n//   validate = () => {\n//     let nameError = \"\";\n//     let emailError = \"\";\n//     // let passwordError = \"\";\n\n//     if (!this.state.name) {\n//       nameError = \"name cannot be blank\";\n//     }\n\n//     if (!this.state.email.includes(\"@\")) {\n//       emailError = \"invalid email\";\n//     }\n\n//     if (emailError || nameError) {\n//       this.setState({ emailError, nameError });\n//       return false;\n//     }\n\n//     return true;\n//   };\n\n//   handleSubmit = event => {\n//     event.preventDefault();\n//     const isValid = this.validate();\n//     if (isValid) {\n//       console.log(this.state);\n//       // clear form\n//       this.setState(initialState);\n//     }\n//   };\n\n//   render() {\n//     return (\n//       <form onSubmit={this.handleSubmit}>\n//         <div>\n//           <input\n//             name=\"name\"\n//             placeholder=\"name\"\n//             value={this.state.name}\n//             onChange={this.handleChange}\n//           />\n//           <div style={{ fontSize: 12, color: \"red\" }}>\n//             {this.state.nameError}\n//           </div>\n//         </div>\n//         <div>\n//           <input\n//             name=\"email\"\n//             placeholder=\"email\"\n//             value={this.state.email}\n//             onChange={this.handleChange}\n//           />\n//           <div style={{ fontSize: 12, color: \"red\" }}>\n//             {this.state.emailError}\n//           </div>\n//         </div>\n//         <div>\n//           <input\n//             type=\"password\"\n//             name=\"password\"\n//             placeholder=\"password\"\n//             value={this.state.password}\n//             onChange={this.handleChange}\n//           />\n//           <div style={{ fontSize: 12, color: \"red\" }}>\n//             {this.state.passwordError}\n//           </div>\n//         </div>\n//         <button type=\"submit\">submit</button>\n//       </form>\n//     );\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}