{"ast":null,"code":"import _classCallCheck from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aminakano/Mytinerary/server/client/src/MYtinerary.js\";\nimport React, { Component } from 'react';\nimport Hamburger from './Nav';\nimport { connect } from 'react-redux';\nimport * as actionCreator from './Store/Actions/actions'; // let cityUrl = window.location.pathname.split(\"/\")[2];\n\nvar MYtinerary =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MYtinerary, _Component);\n\n  function MYtinerary() {\n    var _this;\n\n    _classCallCheck(this, MYtinerary);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MYtinerary).call(this));\n    _this.state = {\n      showItinerary: [],\n      title: \"Gaudi\"\n    };\n    return _this;\n  }\n\n  _createClass(MYtinerary, [{\n    key: \"render\",\n    value: function render() {\n      // this.setState({showItinerary:this.props.itineraries})\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(Hamburger, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Available MYtineraries\"));\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchItineraries(cityUrl);\n    }\n  }]);\n\n  return MYtinerary;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    itineraries: state.itineraries\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchItineraries: function fetchItineraries(city) {\n      dispatch(actionCreator.fetchItineraries(city));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MYtinerary);","map":{"version":3,"sources":["/Users/aminakano/Mytinerary/server/client/src/MYtinerary.js"],"names":["React","Component","Hamburger","connect","actionCreator","MYtinerary","state","showItinerary","title","props","fetchItineraries","cityUrl","mapStateToProps","itineraries","mapDispatchToProps","dispatch","city"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,OAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,KAAKC,aAAZ,MAA+B,yBAA/B,C,CAEA;;IAEMC,U;;;;;AACF,wBAAa;AAAA;;AAAA;;AACT;AACA,UAAKC,KAAL,GAAY;AACRC,MAAAA,aAAa,EAAC,EADN;AAERC,MAAAA,KAAK,EAAE;AAFC,KAAZ;AAFS;AAMZ;;;;6BAEQ;AACL;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAHJ,CADJ;AAYH;;;wCACkB;AACf,WAAKC,KAAL,CAAWC,gBAAX,CAA4BC,OAA5B;AACH;;;;EA1BoBV,S;;AA6BzB,IAAMW,eAAe,GAAE,SAAjBA,eAAiB,CAACN,KAAD,EAAS;AAC5B,SAAO;AACHO,IAAAA,WAAW,EAAEP,KAAK,CAACO;AADhB,GAAP;AAGH,CAJD;;AAKA,IAAMC,kBAAkB,GAAE,SAApBA,kBAAoB,CAACC,QAAD,EAAY;AAClC,SAAO;AACHL,IAAAA,gBAAgB,EAAE,0BAACM,IAAD,EAAU;AACxBD,MAAAA,QAAQ,CAACX,aAAa,CAACM,gBAAd,CAA+BM,IAA/B,CAAD,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AAQA,eAAeb,OAAO,CAACS,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CT,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Hamburger from './Nav';\nimport { connect } from 'react-redux';\nimport * as actionCreator from './Store/Actions/actions';\n\n// let cityUrl = window.location.pathname.split(\"/\")[2];\n\nclass MYtinerary extends Component {\n    constructor(){\n        super()\n        this.state ={\n            showItinerary:[],\n            title: \"Gaudi\"\n        }\n    }\n    \n    render() {\n        // this.setState({showItinerary:this.props.itineraries})\n        return (\n            <div>\n                <Hamburger />\n                {/* <h1>MYtinerary</h1> */}\n                <p>Available MYtineraries</p>\n                {/* <p>{this.state.title}</p>\n                <div>\n                    {this.props.itineraries}\n                </div> */}\n            </div>\n    \n        );\n    }\n    componentDidMount(){\n        this.props.fetchItineraries(cityUrl);\n    }\n}\n\nconst mapStateToProps =(state)=>{\n    return {\n        itineraries: state.itineraries\n    }\n}\nconst mapDispatchToProps =(dispatch)=>{\n    return {\n        fetchItineraries: (city) => {\n            dispatch(actionCreator.fetchItineraries(city))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MYtinerary);"]},"metadata":{},"sourceType":"module"}