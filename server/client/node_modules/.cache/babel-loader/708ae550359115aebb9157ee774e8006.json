{"ast":null,"code":"export var getCities = function getCities(cities) {\n  return {\n    type: \"GET_CITIES\",\n    cities: cities //cities: cities\n\n  };\n};\nexport var getCitiesIsLoaded = function getCitiesIsLoaded(citiesIsLoaded) {\n  return {\n    type: \"CITIES_LOADED\",\n    citiesIsLoaded: citiesIsLoaded\n  };\n};\nexport function fetchCities() {\n  console.log('fetch cities');\n  return function (dispatch) {\n    fetch(\"/api/cities\", {\n      method: \"GET\",\n      mode: \"no-cors\",\n      headers: {\n        'accept': 'application/json',\n        'content-type': 'application/x-www-form-urlencoded'\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      dispatch(getCities(json.data));\n      dispatch(getCitiesIsLoaded(true));\n    }).catch(function (err) {\n      return console.error(err);\n    });\n  };\n}\nexport var getItineraries = function getItineraries(itineraries) {\n  return {\n    type: \"GET_ITINERARIES\",\n    itineraries: itineraries\n  };\n};\nexport function fetchItineraries() {\n  var _this = this;\n\n  console.log(\"fetch itineraries\");\n  return function (dispatch) {\n    var handle = _this.props.match.params.handle;\n    fetch(\"/api/itineraries/\".concat(handle), {\n      method: \"GET\",\n      mode: \"no-cors\",\n      headers: {\n        'accept': \"application/json\",\n        'content-type': \"application/x-www-form-urlencoded\"\n      }\n    }).then(function (response) {\n      return response.json();\n    }).then(function (res) {\n      dispatch(getItineraries(res));\n    }) // .then(json => {\n    //     console.log(json);\n    //     dispatch(getItineraries(json.data))\n    // })\n    .catch(function (err) {\n      return console.error(err);\n    });\n  };\n}\nexport function userSuccess(userAdded) {\n  return {\n    type: \"CREATE_USER\",\n    userAdded: userAdded\n  };\n}\nexport function signUpUsers(userInfo) {\n  return function (dispatch) {\n    fetch('/api/users', {\n      method: 'POST',\n      headers: {\n        'content-type': \"application/x-www-form-urlencoded\"\n      },\n      body: \"username=\" + userInfo.username + \"&password=\" + userInfo.password + \"&email=\" + userInfo.email + \"&firstName=\" + userInfo.firstName + \"&lastName=\" + userInfo.lastName + \"&country=\" + userInfo.country\n    }).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      console.log('json', json);\n    }).catch(function (err) {\n      return console.error(err);\n    });\n  };\n}\nexport function UserLogged(userLoggedIn) {\n  return {\n    type: \"USER_LOGGEDIN\",\n    userLoggedIn: userLoggedIn\n  };\n}\nexport function LogInUsers(userInfo) {\n  return function (dispatch) {\n    fetch('/api/login', {\n      method: 'POST',\n      headers: {\n        'content-type': \"application/x-www-form-urlencoded\"\n      },\n      body: \"username=\" + userInfo.username + \"&password=\" + userInfo.password\n    }).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      dispatch(UserLogged(true));\n      console.log('json', json);\n      localStorage.setItem('token', json.token);\n    });\n  };\n}\nexport function UserLoggedOut() {\n  console.log(\"logout\");\n\n  if (window.confirm('Log out?')) {\n    localStorage.removeItem('token');\n    return function (dispatch) {\n      dispatch(UserLogged(false));\n    };\n  }\n}","map":{"version":3,"sources":["/Users/aminakano/Mytinerary/server/client/src/Store/Actions/actions.js"],"names":["getCities","cities","type","getCitiesIsLoaded","citiesIsLoaded","fetchCities","console","log","dispatch","fetch","method","mode","headers","then","response","json","data","catch","err","error","getItineraries","itineraries","fetchItineraries","handle","props","match","params","res","userSuccess","userAdded","signUpUsers","userInfo","body","username","password","email","firstName","lastName","country","UserLogged","userLoggedIn","LogInUsers","localStorage","setItem","token","UserLoggedOut","window","confirm","removeItem"],"mappings":"AAAA,OAAO,IAAMA,SAAS,GAAC,SAAVA,SAAU,CAACC,MAAD,EAAU;AAC7B,SAAO;AACHC,IAAAA,IAAI,EAAE,YADH;AAEHD,IAAAA,MAAM,EAANA,MAFG,CAEK;;AAFL,GAAP;AAIH,CALM;AAOP,OAAO,IAAME,iBAAiB,GAAC,SAAlBA,iBAAkB,CAACC,cAAD,EAAkB;AAC7C,SAAO;AACHF,IAAAA,IAAI,EAAE,eADH;AAEHE,IAAAA,cAAc,EAAdA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,SAASC,WAAT,GAAsB;AACzBC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AAEA,SAAO,UAAAC,QAAQ,EAAG;AACdC,IAAAA,KAAK,CAAC,aAAD,EAAe;AAChBC,MAAAA,MAAM,EAAE,KADQ;AAEhBC,MAAAA,IAAI,EAAE,SAFU;AAGhBC,MAAAA,OAAO,EAAC;AACJ,kBAAU,kBADN;AAEJ,wBAAgB;AAFZ;AAHQ,KAAf,CAAL,CAQCC,IARD,CAQM,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KARd,EASCF,IATD,CASM,UAAAE,IAAI,EAAI;AACVP,MAAAA,QAAQ,CAACR,SAAS,CAACe,IAAI,CAACC,IAAN,CAAV,CAAR;AACAR,MAAAA,QAAQ,CAACL,iBAAiB,CAAC,IAAD,CAAlB,CAAR;AACH,KAZD,EAaCc,KAbD,CAaO,UAAAC,GAAG;AAAA,aAAIZ,OAAO,CAACa,KAAR,CAAcD,GAAd,CAAJ;AAAA,KAbV;AAcH,GAfD;AAkBH;AAED,OAAO,IAAME,cAAc,GAAC,SAAfA,cAAe,CAACC,WAAD,EAAe;AACvC,SAAO;AACHnB,IAAAA,IAAI,EAAE,iBADH;AAEHmB,IAAAA,WAAW,EAAXA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,SAASC,gBAAT,GAA2B;AAAA;;AAC9BhB,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA,SAAO,UAAAC,QAAQ,EAAG;AAAA,QACNe,MADM,GACK,KAAI,CAACC,KAAL,CAAWC,KAAX,CAAiBC,MADtB,CACNH,MADM;AAEdd,IAAAA,KAAK,4BAAqBc,MAArB,GAA+B;AAChCb,MAAAA,MAAM,EAAC,KADyB;AAEhCC,MAAAA,IAAI,EAAE,SAF0B;AAGhCC,MAAAA,OAAO,EAAC;AACJ,kBAAU,kBADN;AAEJ,wBAAgB;AAFZ;AAHwB,KAA/B,CAAL,CASCC,IATD,CASM,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KATd,EAUCF,IAVD,CAUM,UAAAc,GAAG,EAAG;AACRnB,MAAAA,QAAQ,CAACY,cAAc,CAACO,GAAD,CAAf,CAAR;AACH,KAZD,EAaA;AACA;AACA;AAEA;AAjBA,KAkBCV,KAlBD,CAkBO,UAAAC,GAAG;AAAA,aAAIZ,OAAO,CAACa,KAAR,CAAcD,GAAd,CAAJ;AAAA,KAlBV;AAmBH,GArBD;AAsBH;AACD,OAAO,SAASU,WAAT,CAAqBC,SAArB,EAA+B;AAClC,SAAO;AACH3B,IAAAA,IAAI,EAAE,aADH;AAEH2B,IAAAA,SAAS,EAATA;AAFG,GAAP;AAIH;AACD,OAAO,SAASC,WAAT,CAAqBC,QAArB,EAA8B;AAEjC,SAAO,UAAAvB,QAAQ,EAAG;AACdC,IAAAA,KAAK,CAAC,YAAD,EAAe;AAChBC,MAAAA,MAAM,EAAE,MADQ;AAEhBE,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFO;AAKhBoB,MAAAA,IAAI,EAAE,cAAcD,QAAQ,CAACE,QAAvB,GAAkC,YAAlC,GAAiDF,QAAQ,CAACG,QAA1D,GAAqE,SAArE,GAAiFH,QAAQ,CAACI,KAA1F,GAAkG,aAAlG,GAAkHJ,QAAQ,CAACK,SAA3H,GAAuI,YAAvI,GAAsJL,QAAQ,CAACM,QAA/J,GAA0K,WAA1K,GAAwLN,QAAQ,CAACO;AALvL,KAAf,CAAL,CAMKzB,IANL,CAMU,UAAAc,GAAG;AAAA,aAAIA,GAAG,CAACZ,IAAJ,EAAJ;AAAA,KANb,EAOKF,IAPL,CAOU,UAAAE,IAAI,EAAI;AACZT,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBQ,IAApB;AACD,KATL,EAUKE,KAVL,CAUW,UAAAC,GAAG;AAAA,aAAIZ,OAAO,CAACa,KAAR,CAAcD,GAAd,CAAJ;AAAA,KAVd;AAWH,GAZD;AAaH;AAED,OAAO,SAASqB,UAAT,CAAoBC,YAApB,EAAiC;AAEpC,SAAO;AACHtC,IAAAA,IAAI,EAAC,eADF;AAEHsC,IAAAA,YAAY,EAAZA;AAFG,GAAP;AAIH;AAGD,OAAO,SAASC,UAAT,CAAoBV,QAApB,EAA6B;AAChC,SAAO,UAAAvB,QAAQ,EAAG;AACdC,IAAAA,KAAK,CAAC,YAAD,EAAe;AAChBC,MAAAA,MAAM,EAAE,MADQ;AAEhBE,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX,OAFO;AAKhBoB,MAAAA,IAAI,EAAE,cAAcD,QAAQ,CAACE,QAAvB,GAAkC,YAAlC,GAAiDF,QAAQ,CAACG;AALhD,KAAf,CAAL,CAMGrB,IANH,CAMQ,UAAAc,GAAG;AAAA,aAAIA,GAAG,CAACZ,IAAJ,EAAJ;AAAA,KANX,EAOGF,IAPH,CAOQ,UAAAE,IAAI,EAAG;AACTP,MAAAA,QAAQ,CAAC+B,UAAU,CAAC,IAAD,CAAX,CAAR;AACAjC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBQ,IAAnB;AACA2B,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8B5B,IAAI,CAAC6B,KAAnC;AACH,KAXH;AAYH,GAbD;AAcH;AAGD,OAAO,SAASC,aAAT,GAAwB;AAC3BvC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AAEA,MAAIuC,MAAM,CAACC,OAAP,CAAe,UAAf,CAAJ,EAAgC;AAChCL,IAAAA,YAAY,CAACM,UAAb,CAAwB,OAAxB;AACA,WAAO,UAAAxC,QAAQ,EAAI;AACfA,MAAAA,QAAQ,CAAC+B,UAAU,CAAC,KAAD,CAAX,CAAR;AACC,KAFL;AAGC;AACJ","sourcesContent":["export const getCities=(cities)=>{\n    return {\n        type: \"GET_CITIES\",\n        cities  //cities: cities\n    }\n}\n\nexport const getCitiesIsLoaded=(citiesIsLoaded)=>{\n    return {\n        type: \"CITIES_LOADED\",\n        citiesIsLoaded  \n    }\n}\nexport function fetchCities(){\n    console.log('fetch cities');\n    \n    return dispatch =>{\n        fetch(\"/api/cities\",{\n            method: \"GET\",\n            mode: \"no-cors\",\n            headers:{\n                'accept': 'application/json',\n                'content-type': 'application/x-www-form-urlencoded'\n            }\n        })\n        .then(response => response.json())\n        .then(json => {\n            dispatch(getCities(json.data))\n            dispatch(getCitiesIsLoaded(true))\n        }) \n        .catch(err => console.error(err))\n    }\n\n\n}\n\nexport const getItineraries=(itineraries)=>{\n    return {\n        type: \"GET_ITINERARIES\",\n        itineraries\n    }\n}\nexport function fetchItineraries(){\n    console.log(\"fetch itineraries\");\n    return dispatch =>{\n        const { handle } = this.props.match.params;\n        fetch(`/api/itineraries/${handle}` ,{\n            method:\"GET\",\n            mode: \"no-cors\",\n            headers:{\n                'accept': \"application/json\",\n                'content-type': \"application/x-www-form-urlencoded\"\n            }\n        })\n       \n        .then(response => response.json())\n        .then(res =>{\n            dispatch(getItineraries(res))\n        })\n        // .then(json => {\n        //     console.log(json);\n        //     dispatch(getItineraries(json.data))\n            \n        // })\n        .catch(err => console.error(err))\n    }\n}\nexport function userSuccess(userAdded){\n    return {\n        type: \"CREATE_USER\",\n        userAdded\n    }\n}\nexport function signUpUsers(userInfo){\n    \n    return dispatch =>{\n        fetch('/api/users', {\n            method: 'POST',\n            headers: {\n                'content-type': \"application/x-www-form-urlencoded\"\n            },\n            body: \"username=\" + userInfo.username + \"&password=\" + userInfo.password + \"&email=\" + userInfo.email + \"&firstName=\" + userInfo.firstName + \"&lastName=\" + userInfo.lastName + \"&country=\" + userInfo.country            \n          }).then(res => res.json())\n            .then(json => {\n              console.log('json', json);            \n            })\n            .catch(err => console.error(err));\n    }\n}\n\nexport function UserLogged(userLoggedIn){\n   \n    return {\n        type:\"USER_LOGGEDIN\",\n        userLoggedIn\n    }\n}\n\n\nexport function LogInUsers(userInfo){\n    return dispatch =>{\n        fetch('/api/login', {\n            method: 'POST',\n            headers: {\n                'content-type': \"application/x-www-form-urlencoded\"\n            },\n            body: \"username=\" + userInfo.username + \"&password=\" + userInfo.password \n        }).then(res => res.json())\n          .then(json =>{\n              dispatch(UserLogged(true))\n              console.log('json',json);\n              localStorage.setItem('token', json.token)\n          });\n    }\n}\n\n\nexport function UserLoggedOut(){\n    console.log(\"logout\")\n    \n    if (window.confirm('Log out?')) {\n    localStorage.removeItem('token')\n    return dispatch => {\n        dispatch(UserLogged(false))\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}