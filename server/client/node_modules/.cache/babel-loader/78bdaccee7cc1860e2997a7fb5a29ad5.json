{"ast":null,"code":"import _classCallCheck from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/aminakano/Mytinerary/server/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/aminakano/Mytinerary/server/client/src/Filter.js\";\nimport React, { Component } from 'react';\nimport CityData from './json.json';\nimport CityDisplay from './CityDisplay';\nimport { connect } from 'react-redux';\nimport * as actionCreator from './Store/Actions/actions';\n\nvar Filter =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Filter, _Component);\n\n  function Filter() {\n    var _this;\n\n    _classCallCheck(this, Filter);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Filter).call(this));\n\n    _this.handleButtonValue = function (city) {\n      var cityName = city.charAt(0).toLowerCase() + city.slice(1).replace(/\\s+/g, \"\").toLowerCase();\n      window.location.href = \"MYtinerary/\" + cityName;\n    };\n\n    _this.filterList = function (e) {\n      if (e.target.value == \"\") {\n        _this.setState({\n          filtered: _this.props.cities\n        });\n      } else {\n        var updateList = _this.props.cities.filter(function (item) {\n          return item.cityName.toLowerCase().search(e.target.value.toLowerCase()) !== -1;\n        });\n\n        _this.setState({\n          filtered: updateList\n        });\n      }\n    };\n\n    _this.state = {\n      filtered: [],\n      counter: 0\n    };\n    return _this;\n  }\n\n  _createClass(Filter, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.props.citiesIsLoaded == true) {\n        this.state.counter++;\n\n        if (this.state.counter == 1) {\n          this.setState({\n            filtered: this.props.cities\n          });\n        }\n      } //stylings\n\n\n      var styles = {\n        width: '90%',\n        height: '15vh'\n      };\n      var formStyle = {\n        display: 'flex',\n        justifyContent: 'center' // sorting array ascending\n\n      };\n\n      if (this.props.citiesIsLoaded == true) {\n        var sortArray = this.state.filtered.sort(function (a, b) {\n          if (a.cityName < b.cityName) return -1;\n          if (a.cityName > b.cityName) return 1;\n          return 0;\n        });\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          style: formStyle,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          placeholder: \"Search your destination!\",\n          onChange: this.filterList,\n          className: \"filterText\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"cities\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, sortArray.map(function (obj, index) {\n          return React.createElement(\"div\", {\n            onClick: function onClick() {\n              _this2.handleButtonValue(obj.cityName);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }, React.createElement(\"div\", {\n            className: \"cityNames\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66\n            },\n            __self: this\n          }, obj.cityName), React.createElement(\"img\", {\n            src: obj.image,\n            alt: \"destinations\",\n            style: styles,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 68\n            },\n            __self: this\n          }));\n        })));\n      } else {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, \"Loading...\");\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.fetchCities();\n    }\n  }]);\n\n  return Filter;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    cities: state.cities,\n    citiesIsLoaded: state.citiesIsLoaded\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    fetchCities: function fetchCities() {\n      return dispatch(actionCreator.fetchCities());\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter); // {this.state.filtered.map((obj, index)=>{\n//     return( <div><div className=\"cityNames\">{obj.name}</div><img src={obj.image} alt=\"destinations\" style={styles}/></div>)\n//  })}","map":{"version":3,"sources":["/Users/aminakano/Mytinerary/server/client/src/Filter.js"],"names":["React","Component","CityData","CityDisplay","connect","actionCreator","Filter","handleButtonValue","city","cityName","charAt","toLowerCase","slice","replace","window","location","href","filterList","e","target","value","setState","filtered","props","cities","updateList","filter","item","search","state","counter","citiesIsLoaded","styles","width","height","formStyle","display","justifyContent","sortArray","sort","a","b","map","obj","index","image","fetchCities","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CityData from './json.json';\nimport CityDisplay from './CityDisplay';\nimport { connect } from 'react-redux';\nimport * as actionCreator from './Store/Actions/actions';\n\nclass Filter extends Component{\n    constructor(){\n        super()\n        this.state={               \n            filtered:[],\n            counter: 0,\n        }       \n    } \n    handleButtonValue = (city)=>{\n        var cityName = city.charAt(0).toLowerCase()+city.slice(1).replace(/\\s+/g, \"\").toLowerCase();\n        \n        window.location.href = \"MYtinerary/\" + cityName;\n    }   \n    filterList=(e)=>{\n        if(e.target.value == \"\") {\n            this.setState({filtered: this.props.cities})\n\n        } else {\n        const updateList = this.props.cities.filter((item)=>{\n            return item.cityName.toLowerCase().search(e.target.value.toLowerCase()) !== -1;\n        })\n        this.setState({filtered: updateList})\n        }\n    }\n    render(){\n        if(this.props.citiesIsLoaded == true ){\n            this.state.counter++;\n\n            if(this.state.counter == 1){\n                this.setState({\n                    filtered:this.props.cities\n                })\n            }    \n        }\n        //stylings\n        const styles={\n            width:'90%',\n            height:'15vh'\n        };    \n        const formStyle ={\n            display:'flex',\n            justifyContent:'center'\n        }\n        // sorting array ascending\n        if(this.props.citiesIsLoaded == true){\n            const sortArray = this.state.filtered.sort(function(a,b){\n                if(a.cityName < b.cityName) return -1;\n                if(a.cityName > b.cityName) return 1;\n                return 0;\n            })\n        return(\n            <div>\n                <form style={formStyle}>\n                     <input type=\"text\" placeholder=\"Search your destination!\" onChange={this.filterList} className=\"filterText\"/>                     \n                </form>\n                <div className=\"cities\">                   \n                    {sortArray.map((obj, index)=>{\n                        return( \n                            <div onClick={ ()=> {this.handleButtonValue(obj.cityName)}}>\n                                <div className=\"cityNames\">{obj.cityName}\n                                </div>\n                                <img src={obj.image} alt=\"destinations\" style={styles}/>\n                            </div>\n                        )\n                    })}\n                </div>\n\n            </div>\n        )\n        } else {\n            return (\n                <div>Loading...</div>\n            )\n        }\n    }\n    componentDidMount(){\n        this.props.fetchCities();\n    \n    }\n}\n\nconst mapStateToProps =(state)=>{\n    return {\n        cities: state.cities,\n        citiesIsLoaded: state.citiesIsLoaded\n    }\n}\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        fetchCities: ()=>dispatch(actionCreator.fetchCities())\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\n\n\n// {this.state.filtered.map((obj, index)=>{\n//     return( <div><div className=\"cityNames\">{obj.name}</div><img src={obj.image} alt=\"destinations\" style={styles}/></div>)\n//  })}"]},"metadata":{},"sourceType":"module"}